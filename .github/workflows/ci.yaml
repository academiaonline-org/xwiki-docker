################################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza             #
#      SPDX-License-Identifier:  GPL-2.0-only                                  #
################################################################################
name: CI                                                                       #
on:                                                                            #
  push:                                                                        #
    branches:                                                                  #
    - docker                                                                   #
jobs:                                                                          #
  docker:                                                                      #
    runs-on: ubuntu-18.04                                                      #
    steps:                                                                     #
    -                                                                          #
      name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    -                                                                          #
      name: test                                                               #
      run: |                                                                   #
        set -x                                                                 ;
                                                                               #
        branch=$(basename $GITHUB_REF)                                         ;
        project=$(basename $GITHUB_REPOSITORY)                                 ;
                                                                               #
        echo $branch | grep ^v[0-9] && release=$branch || release=latest       ;
                                                                               #
        docker build -t $GITHUB_REPOSITORY:$release-testing --no-cache .       ;
                                                                               #
        docker run -d -p 8080:8080 --cpus "0.5" -m 1G --memory-reservation 1G  \
           --name test $GITHUB_REPOSITORY:$release-testing                     ;
                                                                               #
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            docker exec test ps                                                \
            |                                                                  \
            grep "1.*java -jar spring-petclinic.jar"                           \
            &&                                                                 \
            break                                                              ;
          done                                                                 ;
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            curl localhost:8080                                                \
            |                                                                  \
            grep "PetClinic :: a Spring Framework demonstration"               \
            &&                                                                 \
            break                                                              ;
          done                                                                 ;
                                                                               #
  swarm:                                                                       #
    env:                                                                       #
      mode: swarm                                                              #
    runs-on: ubuntu-18.04                                                      #
    steps:                                                                     #
    -                                                                          #
      name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    -                                                                          #
      name: test                                                               #
      run: |                                                                   #
        set -x                                                                 ;
                                                                               #
        branch=$(basename $GITHUB_REF)                                         ;
        project=$(basename $GITHUB_REPOSITORY)                                 ;
                                                                               #
        echo $branch | grep ^v[0-9] && release=$branch || release=latest       ;
                                                                               #
        compose=etc/$mode/$project.yaml                                        ;
        sed -i /image:.*$project/s/$release/$release-testing/ $compose         ;
                                                                               #
        docker build -t $GITHUB_REPOSITORY:$release-testing --no-cache .       ;
                                                                               #
        docker swarm init                                                      ;
        sed -i /node.role/s/worker/manager/ $compose                           ;
        docker stack deploy -c $compose $project                               ;
                                                                               #
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            docker service ls                                                  \
            |                                                                  \
            grep "$project.*replicated.*\([0-9]\)/\1.*8080"                    \
            &&                                                                 \
            break                                                              ;
          done                                                                 ;
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            docker service logs ${project}_${project} --tail 1                 \
            |                                                                  \
            grep "Started PetClinicApplication"                                \
            &&                                                                 \
            break                                                              ;
          done                                                                 ;
                                                                               #
  kubernetes:                                                                  #
    env:                                                                       #
      mode: kubernetes                                                         #
    runs-on: ubuntu-18.04                                                      #
    steps:                                                                     #
    -                                                                          #
      name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    -                                                                          #
      name: test                                                               #
      run: |                                                                   #
        set -x                                                                 ;
                                                                               #
        branch=$(basename $GITHUB_REF)                                         ;
        project=$(basename $GITHUB_REPOSITORY)                                 ;
                                                                               #
        echo $branch | grep ^v[0-9] && release=$branch || release=latest       ;
                                                                               #
        compose=etc/$mode/$project.yaml                                        ;
        sed -i /image:.*$project/s/$release/$release-testing/ $compose         ;
                                                                               #
        docker build -t $GITHUB_REPOSITORY:$release-testing --no-cache .       ;
                                                                               #
        version="1.18.10-00"                                                   ;
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg          \
        |                                                                      \
        sudo apt-key add -                                                     ;
        echo deb http://apt.kubernetes.io/ kubernetes-xenial main              \
        |                                                                      \
        sudo tee -a /etc/apt/sources.list.d/kubernetes.list                    ;
        sudo apt-get update                                                    ;
        sudo apt-get install -y --allow-downgrades                             \
          kubelet=$version kubeadm=$version kubectl=$version                   ;
        ip=$( ip r | grep default | awk '{ print $9 }' )                       ;
        sudo swapoff -a                                                        ;
        sudo kubeadm init --apiserver-advertise-address $ip                    \
          --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=all      ;
                                                                               #
        mkdir -p $HOME/.kube                                                   ;
        sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config                  ;
        sudo chown $(id -u):$(id -g) $HOME/.kube/config                        ;
        echo "source <(kubectl completion bash)" >> ~/.bashrc                  ;
        kubectl apply -f                                                       \
          https://docs.projectcalico.org/v3.16/manifests/calico.yaml           ;
        master=$( kubectl get node | grep master | awk '{ print $1 }' )        ;
                                                                               #
        kubectl taint node $master node-role.kubernetes.io/master:NoSchedule-  ;
                                                                               #
        sed -i /imagePullPolicy/s/Always/Never/ $compose                       ;
        kubectl apply -f $compose                                              ;
                                                                               #
        for app in mysql xwiki                                   ;
          do                                                                   \
            while true                                                         ;
              do                                                               \
                sleep 10                                                       ;
                kubectl get deploy | grep "$app.*\([0-9]\)/\1" && break        ;
              done                                                             ;
          done                                                                 ;
                                                                               #
        for app in mysql                                    ;
          do                                                                   \
            while true                                                         ;
              do                                                               \
                sleep 10                                                       ;
                kubectl get svc | grep "$app.*ClusterIP.*3306/TCP" && break    ;
              done                                                             ;
          done                                                                 ;
                                                                               #
        for app in xwiki                                           ;
          do                                                                   \
            while true                                                         ;
              do                                                               \
                sleep 10                                                       ;
                kubectl get svc                                                \
                |                                                              \
                grep "$app.*NodePort.*8080:30000/TCP" && break                 ;
              done                                                             ;
          done                                                                 ;
                                                                               #
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            curl localhost:30000/index.html                                    \
            |                                                                  \
            grep "" && break                             ;
          done                                                                 ;
                                                                               #
